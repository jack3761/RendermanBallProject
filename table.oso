OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: 
shader table
oparam	color	Cout	0 0 0		%read{2147483647,-1} %write{2,2}
oparam	float	Bout	0		%read{2147483647,-1} %write{5,5}
global	float	u	%read{0,3} %write{2147483647,-1} %derivs
global	float	v	%read{1,4} %write{2147483647,-1} %derivs
const	string	$const1	"source_images/Hackberry_pxr128.tx"		%read{2,2} %write{2147483647,-1}
temp	float	$tmp1	%read{2,2} %write{0,0} %derivs
const	float	$const3	4		%read{0,4} %write{2147483647,-1}
temp	float	$tmp2	%read{2,2} %write{1,1} %derivs
const	string	$const4	"source_images/Hackberry_pxr128_bmp.tx"		%read{5,5} %write{2147483647,-1}
temp	float	$tmp3	%read{5,5} %write{3,3} %derivs
temp	float	$tmp4	%read{5,5} %write{4,4} %derivs
code ___main___
# table.osl:6
#     Cout = texture("source_images/Hackberry_pxr128.tx", u*4, v*4);
	mul		$tmp1 u $const3 	%filename{"table.osl"} %line{6} %argrw{"wrr"}
	mul		$tmp2 v $const3 	%argrw{"wrr"}
	texture		Cout $const1 $tmp1 $tmp2 	%argrw{"wrrr"} %argderivs{2,3}
# table.osl:7
#     Bout = texture("source_images/Hackberry_pxr128_bmp.tx", u*4, v*4);
	mul		$tmp3 u $const3 	%line{7} %argrw{"wrr"}
	mul		$tmp4 v $const3 	%argrw{"wrr"}
	texture		Bout $const4 $tmp3 $tmp4 	%argrw{"wrrr"} %argderivs{2,3}
	end
